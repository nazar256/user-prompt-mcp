name: Release Binaries

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p ./bin
          BINARY_NAME=user-prompt-mcp
          OUTPUT_FILE=${BINARY_NAME}-${{ matrix.goos }}-${{ matrix.goarch }}
          
          echo "Building $OUTPUT_FILE..."
          go build -v -o ./bin/${OUTPUT_FILE} ./cmd/user-prompt-mcp/
          
          # Generate checksum before compression
          cd ./bin
          sha256sum ${OUTPUT_FILE} > ${OUTPUT_FILE}.sha256
          
          # Compress binary
          echo "Compressing $OUTPUT_FILE..."
          if [[ "${{ matrix.goos }}" == "darwin" || "${{ matrix.goos }}" == "linux" ]]; then
            gzip -9 -c ${OUTPUT_FILE} > ${OUTPUT_FILE}.gz
          fi

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v3
        with:
          name: binary-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ./bin/user-prompt-mcp-${{ matrix.goos }}-${{ matrix.goarch }}.gz
          
      - name: Upload checksum as artifact
        uses: actions/upload-artifact@v3
        with:
          name: checksum-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ./bin/user-prompt-mcp-${{ matrix.goos }}-${{ matrix.goarch }}.sha256

  attach-to-release:
    name: Attach binaries to release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          
      - name: List artifacts
        run: find ./artifacts -type f | sort
        
      - name: Prepare release files
        run: |
          mkdir -p ./release-files
          find ./artifacts -type f -name "user-prompt-mcp-*" -exec cp {} ./release-files/ \;
          find ./release-files -type f | sort
        
      - name: Attach artifacts to release
        uses: softprops/action-gh-release@v1
        with:
          files: ./release-files/* 